{"version":3,"sources":["../../../server/server/controllers/bookController.js"],"names":["util","Util","BookController","req","res","BookService","getAllBooks","allBooks","length","setSuccess","send","setError","console","log","body","title","price","description","newBook","addBook","createdBook","message","alteredBook","id","params","Number","updateBook","getABook","theBook","deleteBook","bookToDelete"],"mappings":"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","sourcesContent":["import BookService from '../services/BookService';\nimport Util from '../utils/utils';\n\nconst util = new Util();\n\nclass BookController {\n  static async getAllBooks(req, res) {\n    try {\n      const allBooks = await BookService.getAllBooks();\n      if (allBooks.length > 0) {\n        util.setSuccess(200, 'Books retrieved', allBooks);\n      } else {\n        util.setSuccess(200, 'No book found');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async addBook(req, res) {\n    console.log('trying to post');\n    if (!req.body.title || !req.body.price || !req.body.description) {\n      util.setError(400, 'Please provide complete details');\n      return util.send(res);\n    }\n    const newBook = req.body;\n    try {\n      const createdBook = await BookService.addBook(newBook);\n      util.setSuccess(201, 'Book data successfully Added!', createdBook);\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error.message);\n      return util.send(res);\n    }\n  }\n\n  static async updatedBook(req, res) {\n    const alteredBook = req.body;\n    const { id } = req.params;\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n    try {\n      const updateBook = await BookService.updateBook(id, alteredBook);\n      if (!updateBook) {\n        util.setError(404, `Cannot find book with the id: ${id}`);\n      } else {\n        util.setSuccess(200, 'Book updated', updateBook);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async getABook(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const theBook = await BookService.getABook(id);\n\n      if (!theBook) {\n        util.setError(404, `Cannot find book with the id ${id}`);\n      } else {\n        util.setSuccess(200, 'Found Book', theBook);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async deleteBook(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please provide a numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const bookToDelete = await BookService.deleteBook(id);\n\n      if (bookToDelete) {\n        util.setSuccess(200, 'Book deleted');\n      } else {\n        util.setError(404, `Book with the id ${id} cannot be found`);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n}\n\nexport default BookController;\n"],"file":"bookController.js"}