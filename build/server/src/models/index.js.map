{"version":3,"sources":["../../../../server/server/src/models/index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","process","NODE_ENV","config","__dirname","db","sequelize","use_env_variable","DB_NAME","DB_USER","DB_PASS","host","DB_HOST","port","DB_PORT","dialect","dialectOption","ssl","logging","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAjB;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,IAAMC,MAAM,GAAGR,OAAO,CAACS,SAAS,GAAG,sBAAb,CAAP,CAA4CJ,GAA5C,CAAf;;AACA,IAAMK,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIH,MAAM,CAACI,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcI,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACI,gBAAnB,CAAd,EAAoDJ,MAApD,CAAZ;AAEAG,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CACVI,OAAO,CAACD,GAAR,CAAYQ,OADF,EAEVP,OAAO,CAACD,GAAR,CAAYS,OAFF,EAGVR,OAAO,CAACD,GAAR,CAAYU,OAHF,EAIV;AACEC,IAAAA,IAAI,EAAEV,OAAO,CAACD,GAAR,CAAYY,OADpB;AAEEC,IAAAA,IAAI,EAAEZ,OAAO,CAACD,GAAR,CAAYc,OAFpB;AAGEC,IAAAA,OAAO,EAAE,UAHX;AAIEC,IAAAA,aAAa,EAAE;AACbC,MAAAA,GAAG,EAAE,IADQ;AAEb,gBAAQ;AAFK,KAJjB;AAQEC,IAAAA,OAAO,EAAE;AARX,GAJU,CAAZ;AAeD,CAlBD,MAkBO;AACLZ,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CACVM,MAAM,CAACgB,QADG,EAEVhB,MAAM,CAACiB,QAFG,EAGVjB,MAAM,CAACkB,QAHG,EAIVlB,MAJU,CAAZ;AAMD;;AAEDT,EAAE,CAAC4B,WAAH,CAAelB,SAAf,EACGmB,MADH,CACU,UAAAC,IAAI,EAAI;AACd,SACEA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAtB,IAA2BD,IAAI,KAAK1B,QAApC,IAAgD0B,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KADrE;AAGD,CALH,EAMGC,OANH,CAMW,UAAAH,IAAI,EAAI;AACf,MAAMI,KAAK,GAAGtB,SAAS,CAAC,QAAD,CAAT,CAAoBV,IAAI,CAACiC,IAAL,CAAUzB,SAAV,EAAqBoB,IAArB,CAApB,CAAd;AACAnB,EAAAA,EAAE,CAACuB,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CATH;AAWAG,MAAM,CAACC,IAAP,CAAY3B,EAAZ,EAAgBsB,OAAhB,CAAwB,UAAAM,SAAS,EAAI;AACnC,MAAI5B,EAAE,CAAC4B,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3B7B,IAAAA,EAAE,CAAC4B,SAAD,CAAF,CAAcC,SAAd,CAAwB7B,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACR,SAAH,GAAeA,SAAf;AAEAsC,MAAM,CAACC,OAAP,GAAiB/B,EAAjB","sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(__dirname + '/../config/config.js')[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n\n  sequelize = new Sequelize(\n    process.env.DB_NAME,\n    process.env.DB_USER,\n    process.env.DB_PASS,\n    {\n      host: process.env.DB_HOST,\n      port: process.env.DB_PORT,\n      dialect: 'postgres',\n      dialectOption: {\n        ssl: true,\n        native: true\n      },\n      logging: true\n    }\n  );\n} else {\n  sequelize = new Sequelize(\n    config.database,\n    config.username,\n    config.password,\n    config\n  );\n}\n\nfs.readdirSync(__dirname)\n  .filter(file => {\n    return (\n      file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js'\n    );\n  })\n  .forEach(file => {\n    const model = sequelize['import'](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"],"file":"index.js"}